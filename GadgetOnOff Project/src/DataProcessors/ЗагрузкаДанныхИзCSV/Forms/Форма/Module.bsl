
&НаСервере
Процедура ЗагрузитьНаСервереСклад()
	
    //РаботаСМассивами();	
	//РаботаСЦиклами();
	
	РаботаСФайлом();

	
КонецПроцедуры

&НаСервере
Процедура РаботаСФайлом()
	
	Перем Адрес, ВидСклада, Документ, МассивЗначенийСтроки, НаименованиеСклада, НовыйЭлементСклада, НомерСтроки, СсылкаНаСклад, СтрокаДокумента;
	
	//Получить текстовый документ
	Документ = Новый ТекстовыйДокумент;
	Документ.Прочитать(Объект.ПутьКФайлу);
	
	//Построчный обход текстового документа
	Для НомерСтроки = 2 По Документ.КоличествоСтрок() Цикл
		
		//Получить строку документа
		СтрокаДокумента = Документ.ПолучитьСтроку(НомерСтроки);
		
		//Разложим каждое значение, разделенное ; в массив
		МассивЗначенийСтроки = СтрРазделить(СтрокаДокумента, ";");
		
		//Получить значение массива
		НаименованиеКонтрагента    = МассивЗначенийСтроки[0];
		НаименованиеРодителя       = МассивЗначенийСтроки[1];
		НаименованиеИНН            = МассивЗначенийСтроки[2];
		НаименованиеВидКонтрагента = МассивЗначенийСтроки[3];
		
		//Проверка на создание повторного элемента в Общие модули>СоздатьСправочник>Функция "ПроверкаЭлемента"  
		
		//Создать элемент
		НовыйЭлементКонтрагенты = Справочники.Контрагенты.СоздатьЭлемент();	
		НовыйЭлементКонтрагенты.Наименование = НаименованиеКонтрагента;
		НовыйЭлементКонтрагенты.ИНН          = НаименованиеИНН;
		
		Если НаименованиеВидКонтрагента = "Юридическое лицо" Тогда
			
			НовыйЭлементКонтрагенты.ВидКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицо;
			
		ИначеЕсли НаименованиеВидКонтрагента = "Физическое лицо" Тогда
			
			НовыйЭлементКонтрагенты.ВидКонтрагента = Перечисления.ЮрФизЛицо.ФизЛицо;
			
		КонецЕсли;
		
		//Ищем группу в файле
		Если НЕ ПустаяСтрока(НаименованиеРодителя) Тогда
			
			//Ищем группу по названию и присваиваем родителя
			НовыйЭлементКонтрагенты.Родитель = Справочники.Контрагенты.НайтиПоНаименованию(НаименованиеРодителя, Истина);
			
			//Если отсутвует, создаем
			Если НовыйЭлементКонтрагенты.Родитель.Пустая() Тогда
				НовыйЭлементГруппа               = Справочники.Контрагенты.СоздатьГруппу();
				НовыйЭлементГруппа.Наименование  = НаименованиеРодителя;
				НовыйЭлементГруппа.Записать();
				НовыйЭлементКонтрагенты.Родитель = НовыйЭлементГруппа.Ссылка;	
			КонецЕсли;	
			
		КонецЕсли;
		
		НовыйЭлементКонтрагенты.Записать();
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура РаботаСЦиклами()
	
	Перем МассивДанных, ПоследнийЭлемент, Счетчик, СчетчикПоУсловию, ЭлементМассива;
	
	//Цикл по счетчику
	ПоследнийЭлемент = 10;
	Для Счетчик = 1 По ПоследнийЭлемент Цикл
		
		Если Счетчик = 7 Тогда 
			//Прервать
			Продолжить;
		КонецЕсли;
		
		//Сообщить(Счетчик);
		
	КонецЦикла;
	
	//Цикл по условию
	СчетчикПоУсловию = 1;
	Пока СчетчикПоУсловию < 5 Цикл
		
		//Сообщить(СчетчикПоУсловию);
		
		СчетчикПоУсловию = СчетчикПоУсловию + 1;
	КонецЦикла;
	
	//Цикл по коллекциям
	МассивДанных = Новый Массив (3);
	
	МассивДанных[0] = "Первый элемент";
	МассивДанных[1] = "Второй элемент";
	МассивДанных[2] = "Третий элемент";
	Для каждого ЭлементМассива Из МассивДанных Цикл
		
		Сообщить(ЭлементМассива);
		
	КонецЦикла;
	
	Сообщить ("Выполнение цикла завершено");

КонецПроцедуры

// Процедура - Работа с массивами
// Список методов дял работы с массивами
&НаСервере
Процедура РаботаСМассивами()
	
	Перем ЗначениеПоИндексу, КоличествоСтрок, МаксимальныйИндекс, МатрицаКуб, МатрицаСписок, МатрицаТаблица;
	
	МатрицаТаблица = Новый Массив (5, 2);
	МатрицаКуб     = Новый Массив (5, 2, 4);
	МатрицаСписок  = Новый Массив (5);
	
	//Добавить ещё один элемент в массив
	МатрицаСписок.Добавить();
	
	//Установка значения элементов массива
	МатрицаСписок.Вставить(2, "Третий элемент");
	
	//При указании индекса превышаюшего максиамльный
	МатрицаСписок.Вставить(100, "101-ый элемент");
	
	//Определение количества строк и индексов
	КоличествоСтрок    = МатрицаСписок.Количество();
	МаксимальныйИндекс = МатрицаСписок.ВГраница();
	
	Сообщить("Количество строк: " + КоличествоСтрок);
	Сообщить("Максимальный индекс: " + МаксимальныйИндекс);
	
	//Установка значений массива и получение данных из массива
	ЗначениеПоИндексу = МатрицаСписок[2];
	МатрицаСписок[45] = "Элемент и индексом 45";

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСклад(Команда)
	
	ЗагрузитьНаСервереСклад();
	
КонецПроцедуры

// Процедура - Путь к файлу начало выбора
// Интерактивная работа с внешним файлом
// Параметры:
//  Элемент				 - Элемент формы - Содержит занечие элемента формы
//  ДанныеВыбора		 - 	 - 
//  СтандартнаяОбработка - Булево - Признак стандартной обработки
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Выбирите CSV файл'")
	+ "(*.csv)|*.csv";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выбирите CSV файл";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		
		Объект.ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьКонтрагентовНаСервере()
	
	//Получить текстовый документ
	Документ = Новый ТекстовыйДокумент;
	Документ.Прочитать(Объект.ПутьКФайлу);
	
	//Построчный обход текстового документа
	Для НомерСтроки = 2 По Документ.КоличествоСтрок() Цикл
		
		//Получить строку документа
		СтрокаДокумента = Документ.ПолучитьСтроку(НомерСтроки);
		
		//Разложим каждое значение, разделенное ; в массив
		МассивЗначенийСтроки = СтрРазделить(СтрокаДокумента, ";");
		
		//Получить значение массива
		НаименованиеКонтрагента = МассивЗначенийСтроки[0];
		НаименованиеРодителя    = МассивЗначенийСтроки[1];
		
		//Проверка на создание повторного элемента в Общие модули>СоздатьСправочник>Функция "ПроверкаЭлемента"  
		
		//Создать элемент
		НовыйЭлементКонтрагенты = Справочники.Контрагенты.СоздатьЭлемент();	
		НовыйЭлементКонтрагенты.Наименование = НаименованиеКонтрагента;
		
		//Ищем группу в файле
		Если НЕ ПустаяСтрока(НаименованиеРодителя) Тогда
			
			//Ищем группу по названию и присваиваем родителя
			НовыйЭлементКонтрагенты.Родитель = Справочники.Контрагенты.НайтиПоНаименованию(НаименованиеРодителя, Истина);
			
			//Если отсутвует, создаем
			Если НовыйЭлементКонтрагенты.Родитель.Пустая() Тогда
				НовыйЭлементГруппа               = Справочники.Контрагенты.СоздатьГруппу();
				НовыйЭлементГруппа.Наименование  = НаименованиеРодителя;
				НовыйЭлементГруппа.Записать();
				НовыйЭлементКонтрагенты.Родитель = НовыйЭлементГруппа.Ссылка;	
			КонецЕсли;	
			
		КонецЕсли;
		
		НовыйЭлементКонтрагенты.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКонтрагентов(Команда)
	
	ЗагрузитьКонтрагентовНаСервере();
	 	
КонецПроцедуры


&НаСервере
Процедура ЗагрузитьКонтрагентовОбщийМодульНаСервере()
	
	ЗагрузкиИзВнешнихИсточниковСервер.ЗагрузкиИзИсточниковСервер(Объект.ПутьКфайлу);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьКонтрагентовОбщийМодуль(Команда)
	
	ЗагрузитьКонтрагентовОбщийМодульНаСервере();
		
КонецПроцедуры

