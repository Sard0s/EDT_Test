
&НаКлиенте
Процедура РаботаСМассивом(Команда)
	
	//Как создать массив
	МассивСотрудников = Новый Массив;
	
	//Как добавить в массив элементы
	МассивСотрудников.Добавить("Иванов");//0
	МассивСотрудников.Добавить("Петров");//1
	МассивСотрудников.Добавить("Николаев");//2
	
	//Как получить количество элементов в массиве
	КоличествоЭлементов = МассивСотрудников.Количество();
	
	//Как найти значение в массиве
	ИндексПетрова = МассивСотрудников.Найти("Петров");//1
	ИндексВасильева = МассивСотрудников.Найти("Васильев");//Неопределено
	
	//Как получить значение массива (2 способа)
	//способ № 1
	Петров = МассивСотрудников[1];
	
	Петров = МассивСотрудников.Получить(1);
	
	//Обход всех элементов массива
	//способ № 1
	Для Счетчик = 0 По МассивСотрудников.ВГраница() Цикл
	  	Сообщить(МассивСотрудников[Счетчик]);
	КонецЦикла; 
	
	//способ № 2
	Для каждого ЭлементМассива Из МассивСотрудников Цикл
		Сообщить(ЭлементМассива)		
	КонецЦикла; 
	
	//Как удалить элемент массива
	Николаев = МассивСотрудников.Найти("Николаев");
	МассивСотрудников.Удалить(Николаев);
	
	//Как очистить массив
	МассивСотрудников.Очистить();
	
	Если МассивСотрудников.Количество() = 6 Тогда
		ОтстуствующийИндекс = МассивСотрудников[5];
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В массиве нет элемента с индексом 5";
		Сообщение.Сообщить();;
	КонецЕсли; 
	
	Если МассивСотрудников.Количество() = 6 Тогда
		МассивСотрудников.Удалить(5);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В массиве нет элемента с индексом 5";
		Сообщение.Сообщить();;
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСтруктурой(Команда)
	
	//Как создать структуру (3 способа)
	//способ № 1
	СтруктураДанных = Новый Структура;
	
	//способ № 2
	СтруктураДанных = Новый Структура("ФИО,ДатаРождения,АдресПрописки,НомерПаспорта");
	
	//способ № 3
	ИмяСотрудника = "Иванов";
	СтруктураДанных = Новый Структура("ФИО,ДатаРождения,АдресПрописки,НомерПаспорта", ИмяСотрудника, '19900108', "г. Москва, ул. Солнечная, 14", "MC1214141");
	
	//Как вставить элемент в структуру
	СтруктураДанных.Вставить("ТабельныйНомер", "ТТ-14");
	
	//Как получить количество элементов в структуре
	КоличествоЭлементов = СтруктураДанных.Количество();
	
	//Как найти значение в структуре
	ДатаРождения = Неопределено;
	СтруктураДанных.Свойство("ДатаРождения", ДатаРождения);
	
	//Как получить значение структуры (3 способа)
	//способ № 1
	ФИО = СтруктураДанных["ФИО"];
	
	//способ № 2
	ФИО = СтруктураДанных.ФИО;
	
	//способ № 3
	ФИО = Неопределено;
	СтруктураДанных.Свойство("ФИО", ФИО);
	
	//Обход всех элементов структуры
	Для каждого ЭлементСтруктуры Из СтруктураДанных Цикл
		Сообщить(ЭлементСтруктуры.Ключ + " = " + ЭлементСтруктуры.Значение);
	КонецЦикла; 
	
	//Как удалить элемент структуры
	СтруктураДанных.Удалить("НомерПаспорта");
	
	//Как очистить структуру
	СтруктураДанных.Очистить();
	
	ИмяКлюча = "1Сотрудник";
	
	СтруктураДанных.Вставить(СтрЗаменить(ИмяКлюча, "1", ""), 2);
	
	МассивЧисел = Новый Массив;
	Для Число=1 По 5000 Цикл
		МассивЧисел.Добавить(Число);		
	КонецЦикла; 
	
	СтруктураЧисел = Новый Структура;
	Для каждого ЗначениеМассива Из МассивЧисел Цикл
		ИмяКлюча = "Число_" + Формат(МассивЧисел.Найти(ЗначениеМассива), "ЧГ=0");
		СтруктураЧисел.Вставить(ИмяКлюча, ЗначениеМассива);		
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаССоответствием(Команда)
	
	//Как создать соответствие
	СоответствиеРазмеров = Новый Соответствие;
	
	//Как вставить элемент в соответствие
	СоответствиеРазмеров.Вставить(36, "XS");
	СоответствиеРазмеров.Вставить(38, "S");
	СоответствиеРазмеров.Вставить(40, "M");
	СоответствиеРазмеров.Вставить(42, "L");
	СоответствиеРазмеров.Вставить(44, "XL");
	
	//Как получить количество элементов в соответствии
	КоличествоЭлементво = СоответствиеРазмеров.Количество();
	
	//Как найти значение в соответствии
	Размер36 = СоответствиеРазмеров.Получить(36);
	Если Размер36 <> Неопределено Тогда
		Сообщить(Размер36);//XS
	КонецЕсли; 
	
	//Как получить значение соответствия (2 способа)
	//способ № 1
	Размер42 = СоответствиеРазмеров[42];
	
	//способ № 2
	Размер42 = СоответствиеРазмеров.Получить(42);
	Если Размер42 <> Неопределено Тогда
		Сообщить(Размер42);//XS
	КонецЕсли; 
	
	СоответствиеРазмеров[40] = "XXXXL";
	
	//Обход всех элементов соответствия
	Для каждого ЭлементСоответствия Из СоответствиеРазмеров Цикл
		Сообщить("" + ЭлементСоответствия.Ключ + " = " + ЭлементСоответствия.Значение);	
	КонецЦикла; 
	
	//Как удалить элемент соответствия
	СоответствиеРазмеров.Удалить(42);
	
	//Как очистить соответствие
	СоответствиеРазмеров.Очистить();
	
	Сообщить(СоответствиеРазмеров[678]);
	
	Если ТипЗнч(СоответствиеРазмеров) = Тип("Массив") Тогда
		
	ИначеЕсли ТипЗнч(СоответствиеРазмеров) = Тип("Структура") Тогда
		
	ИначеЕсли ТипЗнч(СоответствиеРазмеров) = Тип("Соответствие") Тогда
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСоСпискомЗначений(Команда)
	
	//Как создать список значений
	СписокДней = Новый СписокЗначений;
	
	//Как добавить элементы в список значений
	СписокДней.Добавить("Пн", "Понедельник",,БиблиотекаКартинок.АктивироватьЗадачу);
	СписокДней.Добавить("Вт", "Вторник",,БиблиотекаКартинок.АктивныеПользователи);
	СписокДней.Добавить("Ср", "Среда",, БиблиотекаКартинок.БизнесПроцесс);
	СписокДней.Добавить("Чт", "Четверг",, БиблиотекаКартинок.ВводНаОсновании);
	СписокДней.Добавить("Пт", "Пятница",, БиблиотекаКартинок.ВидРасчета);
	СписокДней.Добавить("Сб", "Суббота",, БиблиотекаКартинок.ВнешнийИсточникДанных);
	СписокДней.Добавить("Вс", "Воскресенье",, БиблиотекаКартинок.ВыделитьВажное);
	
	//Как получить количество элементов в списке значений
	КоличествоЗначений = СписокДней.Количество();
	
	//Как найти значение в списке значений
	Среда = СписокДней.НайтиПоЗначению("Ср");
	Четвер = СписокДней.НайтиПоИдентификатору(3);
	
	//Как получить значение из списка значений (2 способа)
	//способ № 1
	Пятница = СписокДней.Получить(4);
	
	//способ № 2
	Пятница = СписокДней[4];
	                                                                                                                                                  
	//Обход всех элементов списка значений
	Для каждого ЭлементСписка Из СписокДней Цикл
		Сообщить("" + ЭлементСписка.Значение + " (" + ЭлементСписка.Представление + ")");
	КонецЦикла; 
	
	//Показать список значений пользователю для выбора одного значения
	//ЧтоДелатьПослеВыбора = Новый ОписаниеОповещения("ПослеВыбораЗначения", ЭтотОбъект);
	//СписокДней.ПоказатьВыборЭлемента(ЧтоДелатьПослеВыбора, "Выберите день удаленной работы");
	
	//Показать список значений пользователю для отметки нескольких значений
	ЧтоДелатьПослеОтметки = Новый ОписаниеОповещения("ПослеОтметкиЗначений", ЭтотОбъект);
	СписокДней.ПоказатьОтметкуЭлементов(ЧтоДелатьПослеОтметки, "Выберите дни удаленной работы");
	
	//Как удалить элемент списка значений
	//СписокДней.Удалить(0);
	
	//Как очистить список значений
	//СписокДней.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораЗначения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт

	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Сообщить("Вы будете работать удаленно в " + ВыбранныйЭлемент.Представление);

КонецПроцедуры // ПослеВыбораЗначения()

&НаКлиенте
Процедура ПослеОтметкиЗначений(Список, ДополнительныеПараметры) Экспорт

	Если Список = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДниУдаленнойРаботы = "";
	Для каждого ДеньНедели Из Список Цикл
		Если ДеньНедели.Пометка Тогда
			ДниУдаленнойРаботы = ДниУдаленнойРаботы + ?(ДниУдаленнойРаботы<>"", ", ", "") + ДеньНедели.Представление;	
		КонецЕсли; 
	КонецЦикла; 
	
	Сообщить("Вы будете работать удаленно в следующие дни: " + ДниУдаленнойРаботы);

КонецПроцедуры // ПослеВыбораЗначения()

&НаКлиенте
Процедура РаботаСТаблицейЗначений(Команда)
	РаботаСТаблицейЗначенийНаСервере();
КонецПроцедуры

&НаСервере
Процедура РаботаСТаблицейЗначенийНаСервере()
	
	//Как создать таблицу значений
	ТаблицаТоваров = Новый ТаблицаЗначений;
	
	КвалификаторыЧисла = Новый КвалификаторыЧисла(10, 2);
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число",,,КвалификаторыЧисла);
	
	КвалификаторыСтроки = Новый КвалификаторыСтроки(100);
	ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка",,,,КвалификаторыСтроки);
	
	//Как добавить колонки в таблицу значений
	ТаблицаТоваров.Колонки.Добавить("Артикул", ОписаниеТипаСтрока);
	ТаблицаТоваров.Колонки.Добавить("Группа", ОписаниеТипаСтрока);
	ТаблицаТоваров.Колонки.Добавить("Наименование", ОписаниеТипаСтрока);
	ТаблицаТоваров.Колонки.Добавить("Количество", ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("ЦенаЗакупки", ОписаниеТипаЧисло);
	ТаблицаТоваров.Колонки.Добавить("ЦенаПродажи", ОписаниеТипаЧисло);

	//Как добавить элементы (строки) в таблицу значений
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Артикул = "124";
	НоваяСтрока.Наименование = "Мышь Logitech";
	НоваяСтрока.Количество = 15;
	НоваяСтрока.ЦенаЗакупки = 20;
	НоваяСтрока.ЦенаПродажи = 40;
	НоваяСтрока.Группа = "Компьютерные комплектующие";
	
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Артикул = "А12412";
	НоваяСтрока.Наименование = "Монитор Samsung";
	НоваяСтрока.Количество = 10;
	НоваяСтрока.ЦенаЗакупки = 150;
	НоваяСтрока.ЦенаПродажи = 300;
	НоваяСтрока.Группа = "Компьютерные комплектующие";
	
	НоваяСтрока = ТаблицаТоваров.Добавить();
	НоваяСтрока.Артикул = "Б124211";
	НоваяСтрока.Наименование = "Микрофон Rode NT-USB";
	НоваяСтрока.Количество = 4;
	НоваяСтрока.ЦенаЗакупки = 200;
	НоваяСтрока.ЦенаПродажи = 400;
	НоваяСтрока.Группа = "Микрофоны";
	
	//Как получить количество элементов в таблице значений
	КоличествоСтрок = ТаблицаТоваров.Количество();
	
	//Как найти один элемент в таблице значений
	Мышь = ТаблицаТоваров.Найти("Мышь Logitech", "Наименование");
	Если Мышь = Неопределено Тогда
		Сообщить("Номенклатура Мышь не найдена в таблице!!!");
	КонецЕсли; 
	
	//Как найти все элементы таблицы значений, которые удовлетворяют условию поиска
	ПараметрыОтбора = Новый Структура("Группа", "Компьютерные комплектующие");
	ВсеКомплектующие = ТаблицаТоваров.НайтиСтроки(ПараметрыОтбора);
	
	Если ВсеКомплектующие.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не найдено комплектующих";
		Сообщение.Сообщить();
	КонецЕсли; 
	Для каждого СтрокаКомплектующих Из ВсеКомплектующие Цикл
		Сообщить(СтрокаКомплектующих.Артикул);
	КонецЦикла; 
	
	//Как создать копию таблицы значений (с данными)
	ТаблицаКомплектующие = ТаблицаТоваров.Скопировать(ВсеКомплектующие);
	
	//Как создать копию таблицы значений (без данных)
	ПолнаяКопияБезДанных = ТаблицаТоваров.СкопироватьКолонки();	
	
	//Как выполнить сортировку в таблице значений
	//по возрастанию цены
	ТаблицаТоваров.Сортировать("ЦенаПродажи");
	
	//по убыванию цены
	ТаблицаТоваров.Сортировать("ЦенаПродажи Убыв");

	//Как получить итог по колонке числового типа
	КоличествоИтог = ТаблицаТоваров.Итог("Количество");
	
	//как свернуть таблицу значений
	КопияТаблицы = ТаблицаТоваров.Скопировать();
	КопияТаблицы.Свернуть("Группа", "Количество");
	
	//Обход всех элементов таблицы значений
	Для каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаТаблицы.Наименование + ", " + СтрокаТаблицы.Артикул;
		Сообщение.Сообщить();		
	КонецЦикла; 
	
	//Как удалить элемент таблицы значений
	НайденнаяСтрока = ТаблицаТоваров.Найти("А12412", "Артикул");
	Если НайденнаяСтрока <> Неопределено Тогда
		ТаблицаТоваров.Удалить(НайденнаяСтрока);
	КонецЕсли; 
	
	//Как очистить таблицу значений
	ТаблицаТоваров.Очистить();
	
	Для Счетчик=1 По 100 Цикл
		СтрокаТаблицы = ТаблицаТоваров.Добавить();
		СтрокаТаблицы.Артикул = Строка(Счетчик);
		СтрокаТаблицы.Наименование = "Мышь Logitech " + Счетчик;
		СтрокаТаблицы.Количество = 15;
		СтрокаТаблицы.ЦенаЗакупки = 20;
		СтрокаТаблицы.ЦенаПродажи = 40;
		СтрокаТаблицы.Группа = "Компьютерные комплектующие";
	КонецЦикла; 
	
	ТаблицаТоваров.Индексы.Добавить("Артикул");
	НайденныйТовар = ТаблицаТоваров.Найти("14", "Артикул");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаТоваров", ТаблицаТоваров);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Артикул КАК Артикул,
		|	ТаблицаТоваров.Наименование КАК Наименование,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.ЦенаЗакупки КАК ЦенаЗакупки,
		|	ТаблицаТоваров.ЦенаПродажи КАК ЦенаПродажи
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Артикул КАК Артикул,
		|	ВТ_Товары.Наименование КАК Наименование,
		|	СУММА(ВТ_Товары.Количество) КАК Количество,
		|	ВТ_Товары.ЦенаЗакупки КАК ЦенаЗакупки,
		|	ВТ_Товары.ЦенаПродажи КАК ЦенаПродажи
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Товары.Артикул,
		|	ВТ_Товары.Наименование,
		|	ВТ_Товары.ЦенаЗакупки,
		|	ВТ_Товары.ЦенаПродажи";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварныеЗапасыОстатки.Товар КАК Товар,
		|	ТоварныеЗапасыОстатки.Склад КАК Склад,
		|	ТоварныеЗапасыОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварныеЗапасы.Остатки КАК ТоварныеЗапасыОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	//способ № 1
	//ТаблицаЗапроса = РезультатЗапроса.Выгрузить();	
	//ТаблицаОстатки.Загрузить(ТаблицаЗапроса);
	
	//способ № 2
	Выборка = РезультатЗапроса.Выбрать();
	ТаблицаОстатки.Очистить();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОстатки.Добавить(), Выборка);	
	КонецЦикла; 
	
	//ТаблицаЗначений = РеквизитФормыВЗначение("ТаблицаОстатки");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварныеЗапасыОстатки.Склад КАК Склад,
		|	ТоварныеЗапасыОстатки.Товар КАК Товар,
		|	ТоварныеЗапасыОстатки.КоличествоОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварныеЗапасы.Остатки КАК ТоварныеЗапасыОстатки
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	Склад";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДеревоОбъект = РезультатЗапроса.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗначениеВРеквизитФормы(ДеревоОбъект, "ДеревоОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаСДеревомЗначений(Команда)
	РаботаСДеревомЗначенийНаСервере();
КонецПроцедуры

&НаСервере
Процедура РаботаСДеревомЗначенийНаСервере()
	
	//Как создать дерево значений
	ДеревоОстатки = Новый ДеревоЗначений;
	
	//Как добавить колонки в дерево значений
	ДеревоОстатки.Колонки.Добавить("Склад");
	ДеревоОстатки.Колонки.Добавить("Товар");
	ДеревоОстатки.Колонки.Добавить("Количество");
	
	//Как добавить элементы (строки) в дерево значений
	ОстаткиСкладОсновной = ДеревоОстатки.Строки.Добавить();
	ОстаткиСкладОсновной.Склад = "Основной";
	ОстаткиСкладОсновной.Количество = 100;
	
	//детали по складу "Основной"
	СтрокаОстатки = ОстаткиСкладОсновной.Строки.Добавить();
	СтрокаОстатки.Склад = "Основной";
	СтрокаОстатки.Товар = "Кирпич";
	СтрокаОстатки.Количество = 60;
	
	СтрокаОстатки = ОстаткиСкладОсновной.Строки.Добавить();
	СтрокаОстатки.Склад = "Основной";
	СтрокаОстатки.Товар = "Грунтовка";
	СтрокаОстатки.Количество = 40;
	
	ОстаткиСкладДополнительный = ДеревоОстатки.Строки.Добавить();
	ОстаткиСкладДополнительный.Склад = "Дополнительный";
	ОстаткиСкладДополнительный.Количество = 200;
	
	СтрокаОстатки = ОстаткиСкладДополнительный.Строки.Добавить();
	СтрокаОстатки.Склад = "Дополнительный";
	СтрокаОстатки.Товар = "Кирпич";
	СтрокаОстатки.Количество = 140;
	
	СтрокаОстатки = ОстаткиСкладДополнительный.Строки.Добавить();
	СтрокаОстатки.Склад = "Дополнительный";
	СтрокаОстатки.Товар = "Грунтовка";
	СтрокаОстатки.Количество = 60;
	
	//Как получить количество элементов в дереве значений
	КоличествоСтрокВерхнегоУровня = ДеревоОстатки.Строки.Количество();
	КоличествоСтрокПоДопСкладу = ОстаткиСкладДополнительный.Строки.Количество();
	
	//Как найти один элемент в дереве значений
	СтрокаГрунтовка = ДеревоОстатки.Строки.Найти("Грунтовка", "Товар", Истина);
	Если СтрокаГрунтовка = Неопределено Тогда
		Сообщить("Строка не найдена");
	Иначе
		Сообщить(СтрокаГрунтовка.Количество);
	КонецЕсли; 
	
	//Как найти все элементы дерева значений, которые удовлетворяют условию поиска
	ПараметрыОтбора = Новый Структура("Товар", "Грунтовка");
	ВсеСтрокиПоГрунтовке = ДеревоОстатки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	Сообщить("Найдено строк: " + ВсеСтрокиПоГрунтовке.Количество());
	
	//Как создать копию дерева значений (с данными)
	
	//Как удалить элемент дерева значений
	//ПараметрыОтбора = Новый Структура("Товар, Склад", "Грунтовка", "Дополнительный");
	//НайденныеСтроки = ДеревоОстатки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	//Для каждого СтрокаДерева Из НайденныеСтроки Цикл
	//	ДеревоОстатки.Строки.Удалить(СтрокаДерева);	
	//КонецЦикла; 
		
	//Как выполнить сортировку в дереве значений
	ДеревоОстатки.Строки.Сортировать("Количество Убыв", Истина);
	
	//Обход всех элементов дерева значений
	ОбходДереваЗначений(ДеревоОстатки.Строки);
	
	//Как очистить дерево значений
	ДеревоОстатки.Строки.Очистить();	
	
КонецПроцедуры

&НаСервере
Процедура ОбходДереваЗначений(КоллекцияСтрокДерева)

	Для каждого СтрокаДерева Из КоллекцияСтрокДерева Цикл
		Сообщить("Уровень: " + СтрокаДерева.Уровень() + "; " + СтрокаДерева.Склад  + "; " + СтрокаДерева.Товар + "; " + СтрокаДерева.Количество);
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			ОбходДереваЗначений(СтрокаДерева.Строки);
		КонецЕсли; 
	КонецЦикла; 

КонецПроцедуры // ОбходДереваЗначений()


