
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//СуммаДокумента = Товары.Итог("Стоймость");
	ОбщаяСумма = Товары.Итог("Стоймость");
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
		// Заполнение шапки
		Покупатель = ДанныеЗаполнения.Покупатель;
		Склады = ДанныеЗаполнения.Склад;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			НоваяСтрока = Товары.Добавить();
			НоваяСтрока.Количество = ТекСтрокаТовары.Количество;
			НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
			НоваяСтрока.Стоймость = ТекСтрокаТовары.Стоймость;
			НоваяСтрока.ЦенаРеализации = ТекСтрокаТовары.ЦенаРеализации;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Способ №2 ВидНоменклатуры для Выручки
	
	Движения.Хозрасчетный.Записывать = Истина;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровИУслугТовары.Стоймость КАК Стоймость,
		|	РеализацияТоваровИУслугТовары.Номенклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
		|ГДЕ
		|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
		Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
		Движение.Период = Дата;
		Движение.Сумма = ВыборкаДетальныеЗаписи.Стоймость;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Покупатель;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = Договор;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ВидНоменклатуры] = ВыборкаДетальныеЗаписи.НоменклатураВидНоменклатуры;
	КонецЦикла;

	//// регистр Хозрасчетный 
	//Движения.Хозрасчетный.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.Хозрасчетный.Добавить();
	//	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	//	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
	//	Движение.Период = Дата;
	//	Движение.Сумма = ТекСтрокаТовары.Стоймость;
	//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Покупатель;
	//	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = Договор;
	//	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.ВидНоменклатуры] = ТекСтрокаТовары.Номенклатура.ВидНоменклатуры;
	//КонецЦикла;

	//// регистр ТоварыНаСкладах Расход
	//Движения.ТоварыНаСкладах.Записывать = Истина;
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыНаСкладах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
	//	Движение.Склад = Склады;
	//	Движение.Количество = ТекСтрокаТовары.Количество;
	//КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	
	//второй вариант движени "регистр ТоварыНаСкладах"
	//FIFO - first input first output
	//LIFO - last input first output
	
	Движения.Хозрасчетный.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записать();
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записать(); //Запись пустого набора	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровИУслугТовары.Стоймость) КАК Стоймость,
		|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ДокТЧ
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
		|ГДЕ
		|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
		|	И РеализацияТоваровИУслугТовары.Номенклатура.ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровИУслугТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДокТЧ.Номенклатура КАК Номенклатура,
		|	ВТ_ДокТЧ.Стоймость КАК Стоймость,
		|	ВТ_ДокТЧ.Количество КАК Количество,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	ВТ_ДокТЧ КАК ВТ_ДокТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВТ_ДокТЧ.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ДокТЧ КАК ВТ_ДокТЧ)
		|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|		ПО ВТ_ДокТЧ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|ИТОГИ
		|	МАКСИМУМ(Стоймость),
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СуммаОстаток)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склады);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток  Тогда
			Сообщить("Недостаточно товара " + ВыборкаНоменклатура.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			Пока ВыборкаДетальныеЗаписи.Следующий() И ОсталосьСписать > 0 Цикл
				
				Движение = Движения.ТоварыНаСкладах.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Склад = Склады;
				Движение.Количество = Мин(ОсталосьСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
				
				Если Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
					Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток;
				Иначе
					Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаОстаток / ВыборкаДетальныеЗаписи.КоличествоОстаток * Движение.Количество; 
				КонецЕсли;
				ОсталосьСписать = ОсталосьСписать - Движение.Количество;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;	

	 //регистр Продажи 
	Движения.Продажи.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.ОтветственныйСотрудник = ОтветственныйСотрудник;
		Движение.Контрагент = Покупатель;
		Движение.Склад = Склады;
		Движение.Стоимость = ТекСтрокаТовары.Стоймость;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	//Бухгалтерский учет
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровИУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
		|	СУММА(РеализацияТоваровИУслугТовары.Стоймость) КАК Стоймость
		|ПОМЕСТИТЬ ВТ_ДокТЧ
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
		|ГДЕ
		|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
		|	И РеализацияТоваровИУслугТовары.ВидыНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровИУслугТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДокТЧ.Номенклатура КАК Номенклатура,
		|	ВТ_ДокТЧ.Количество КАК Количество,
		|	ВТ_ДокТЧ.Стоймость КАК Стоймость,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоСкладамИХарактеристикам.КоличествоОстатокДт, 0) КАК КоличествоОстатокПоХар,
		|	ХозрасчетныйОстаткиПоСкладамИХарактеристикам.Субконто3 КАК Субконто3,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВСЕМ.КоличествоОстатокДт, 0) КАК КоличествоОстатокПоВсем,
		|	ЕСТЬNULL(ХозрасчетныйОстаткиПоВСЕМ.СуммаОстатокДт, 0) КАК СуммаОстатокПоВсем,
		|	ВТ_ДокТЧ.Номенклатура.Представление КАК НоменклатураПредставление
		|ИЗ
		|	ВТ_ДокТЧ КАК ВТ_ДокТЧ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
		|				&СубконтоТовары,
		|				Субконто1 В
		|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ВТ_ДокТЧ.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ДокТЧ КАК ВТ_ДокТЧ)
		|					И Субконто2 = &Склады) КАК ХозрасчетныйОстаткиПоСкладамИХарактеристикам
		|		ПО ВТ_ДокТЧ.Номенклатура = ХозрасчетныйОстаткиПоСкладамИХарактеристикам.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
		|				&МоментВремени,
		|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах),
		|				&СубконтоТовары,
		|				Субконто1 В
		|					(ВЫБРАТЬ
		|						ВТ_ДокТЧ.Номенклатура КАК Номенклатура
		|					ИЗ
		|						ВТ_ДокТЧ КАК ВТ_ДокТЧ)) КАК ХозрасчетныйОстаткиПоВСЕМ
		|		ПО ВТ_ДокТЧ.Номенклатура = ХозрасчетныйОстаткиПоВСЕМ.Субконто1
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(Стоймость),
		|	СУММА(КоличествоОстатокПоХар),
		|	МАКСИМУМ(КоличествоОстатокПоВсем),
		|	МАКСИМУМ(СуммаОстатокПоВсем)
		|ПО
		|	Номенклатура";
	
	СубконтоТовары = Новый Массив;
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склады);
	СубконтоТовары.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Характеристики);
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склады", Склады);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СубконтоТовары", СубконтоТовары);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстатокПоХар Тогда
			
			Сообщить("Бухгалтерский учет: недостаточно...");	
			Отказ = Истина;
			
		КонецЕсли;
		
		Себестоимость1шт = ВыборкаНоменклатура.СуммаОстатокПоВсем / ВыборкаНоменклатура.КоличествоОстатокПоВсем;
		
		Если НЕ Отказ Тогда
			
			ОсталосьСписать = ВыборкаНоменклатура.Количество;
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() И ОсталосьСписать > 0 Цикл
				
				// регистр Хозрасчетный МОДУЛЬ 18
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.Выручка;
				Движение.СчетКт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
				Движение.Период = Дата;
				//Движение.Сумма = СЕБЕСТОИМОСТЬ;
				
				Движение.КоличествоКт = Мин(ОсталосьСписать.ВыборкаДетальныеЗаписи.КоличествоОстатокПоХар);
				Если Движение.КоличествоКт = ВыборкаНоменклатура.КоличествоОстатокПоВсем Тогда
					Движение.Сумма = ВыборкаНоменклатура.СуммаОстатокПоВсем;
				Иначе
					Движение.Сумма = Движение.КоличествоКт * Себестоимость1шт;
				КонецЕсли;
				
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.ВидНоменклатуры] = ВыборкаДетальныеЗаписи.ВидыНоменклатуры;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склады] = Склады;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Характеристики] = ВыборкаДетальныеЗаписи.Субконто3;	
				
				ОсталосьСписать = ОсталосьСписать - Движение.КоличествоКт
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


